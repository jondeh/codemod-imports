{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/jonde/Code/codemods/jscodeshift-practice/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonde/Code/codemods/jscodeshift-practice\",\"filename\":\"/home/jonde/Code/codemods/jscodeshift-practice/transform.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonde/Code/codemods/jscodeshift-practice\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonde/Code/codemods/jscodeshift-practice",
      "filename": "/home/jonde/Code/codemods/jscodeshift-practice/transform.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/jonde/Code/codemods/jscodeshift-practice",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonde/Code/codemods/jscodeshift-practice/transform.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ],
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonde/Code/codemods/jscodeshift-practice/transform.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
        "sourceFileName": "transform.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst fs = require('fs');\n\nconst pathModule = require('path');\n\nmodule.exports = (file, api) => {\n  const j = api.jscodeshift;\n  return j(file.source).find(j.ImportDeclaration).forEach(path => {\n    const conditions = ['../', './', 'coi-constants/', 'coi-server/', 'coi-client/', 'coi-shared/', 'coi-test/', 'db/'];\n    const nullConditions = ['.css', '.js'];\n\n    if (conditions.some(e => path.node.source.value.startsWith(e)) && !nullConditions.some(e => path.node.source.value.endsWith(e))) {\n      const newPath = path.node.source.value.startsWith('./') ? '.' + path.node.source.value : path.node.source.value;\n      console.log(\"newPath: \", newPath);\n      const absolutePath = pathModule.resolve(file.path, newPath);\n      console.log(\"FILE PATH: \", file.path);\n      console.log('SOURCE: ', path.node.source.value);\n      console.log(\"absolutePath\", absolutePath);\n      console.log(\" \");\n      console.log(\" \"); // if (fs.existsSync(absolutePath)) {\n      //   console.log(\"stat: \", fs.statSync(absolutePath, (err, stats) => {\n      //     if (err) return console.log(err)\n      //     console.log(\"stats: \", stats)\n      //     return stats\n      //   }))\n      //   if (fs.statSync(absolutePath).isDirectory()) {\n      //     console.log('DING DING DING')\n      //     console.log(\"FILE PATH: \", file.path)\n      //     console.log('SOURCE: ', path.node.source.value)\n      //     console.log(fs.existsSync(absolutePath))\n      //     console.log(\"ABSOLUTE: \", absolutePath)\n      //   }\n      // }\n\n      if (fs.existsSync(absolutePath) && fs.statSync(absolutePath).isDirectory()) {\n        console.log('DING DING DING');\n        console.log(\"FILE PATH: \", file.path);\n        console.log('SOURCE: ', path.node.source.value);\n        console.log(fs.existsSync(absolutePath));\n        console.log(\"ABSOLUTE: \", absolutePath);\n        const indexPath = pathModule.join(absolutePath, '/index.js');\n        console.log(\"INDEX: \", indexPath);\n\n        if (fs.existsSync(indexPath)) {\n          console.log(\"indexPath: \", indexPath);\n          path.node.source.value = path.node.source.value + '/index.js';\n          console.log(path.node.source.value + '/index.js');\n          console.log(\"<<< /index.js ADDED >>>\");\n        }\n      } else {\n        path.node.source.value = path.node.source.value + '.js';\n        console.log(\" <<< .js ADDED >>>\");\n      } // const isDir = fs.lstat(path.node.source.value, err => console.log(err))\n      // console.log(\"isDir: \", isDir)\n      // if (isDir?.isDirectory()) {\n      //   if (fs.existsSync(indexPath)) {\n      //     // path.node.source.value = indexPath\n      //     console.log(\"indexPath: \", indexPath)\n      //   }\n      // } else {\n      //   console.log(\"path.node.source.value + '.js': \", path.node.source.value + '.js')\n      // }\n\n    }\n\n    j(path).replaceWith(path.node);\n  }).toSource();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "transform.js"
      ],
      "names": [
        "fs",
        "require",
        "pathModule",
        "module",
        "exports",
        "file",
        "api",
        "j",
        "jscodeshift",
        "source",
        "find",
        "ImportDeclaration",
        "forEach",
        "path",
        "conditions",
        "nullConditions",
        "some",
        "e",
        "node",
        "value",
        "startsWith",
        "endsWith",
        "newPath",
        "console",
        "log",
        "absolutePath",
        "resolve",
        "existsSync",
        "statSync",
        "isDirectory",
        "indexPath",
        "join",
        "replaceWith",
        "toSource"
      ],
      "mappings": "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",
      "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
      "sourcesContent": [
        "const fs = require('fs')\nconst pathModule = require('path')\n\nmodule.exports = (file, api) => {\n  const j = api.jscodeshift\n\n  return j(file.source)\n    .find(j.ImportDeclaration)\n    .forEach(path => {\n      const conditions = [\n        '../',\n        './',\n        'coi-constants/',\n        'coi-server/',\n        'coi-client/',\n        'coi-shared/',\n        'coi-test/',\n        'db/'\n      ]\n      const nullConditions = ['.css', '.js']\n      if (\n        conditions.some(e => path.node.source.value.startsWith(e)) &&\n        !nullConditions.some(e => path.node.source.value.endsWith(e))\n      ) {\n\n        const newPath = path.node.source.value.startsWith('./') ? '.' + path.node.source.value : path.node.source.value\n\n        console.log(\"newPath: \", newPath)\n\n        const absolutePath = pathModule.resolve(file.path, newPath)\n     \n\n        console.log(\"FILE PATH: \", file.path)\n        console.log('SOURCE: ', path.node.source.value)\n        console.log(\"absolutePath\", absolutePath)\n        console.log(\" \")\n        console.log(\" \")\n        \n        // if (fs.existsSync(absolutePath)) {\n        //   console.log(\"stat: \", fs.statSync(absolutePath, (err, stats) => {\n        //     if (err) return console.log(err)\n        //     console.log(\"stats: \", stats)\n        //     return stats\n        //   }))\n        //   if (fs.statSync(absolutePath).isDirectory()) {\n        //     console.log('DING DING DING')\n        //     console.log(\"FILE PATH: \", file.path)\n        //     console.log('SOURCE: ', path.node.source.value)\n        //     console.log(fs.existsSync(absolutePath))\n        //     console.log(\"ABSOLUTE: \", absolutePath)\n        //   }\n        // }\n\n        if (fs.existsSync(absolutePath) && fs.statSync(absolutePath).isDirectory()) {\n          console.log('DING DING DING')\n          console.log(\"FILE PATH: \", file.path)\n          console.log('SOURCE: ', path.node.source.value)\n          console.log(fs.existsSync(absolutePath))\n          console.log(\"ABSOLUTE: \", absolutePath)\n          const indexPath = pathModule.join(absolutePath, '/index.js')\n          console.log(\"INDEX: \", indexPath)\n          if (fs.existsSync(indexPath)) {\n            console.log(\"indexPath: \", indexPath)\n            path.node.source.value = path.node.source.value + '/index.js'\n            console.log(path.node.source.value + '/index.js')\n            console.log(\"<<< /index.js ADDED >>>\")\n          }\n        } else {\n          path.node.source.value = path.node.source.value + '.js'\n          console.log(\" <<< .js ADDED >>>\")\n        }\n\n\n        \n\n        // const isDir = fs.lstat(path.node.source.value, err => console.log(err))\n        // console.log(\"isDir: \", isDir)\n\n        // if (isDir?.isDirectory()) {\n        //   if (fs.existsSync(indexPath)) {\n        //     // path.node.source.value = indexPath\n        //     console.log(\"indexPath: \", indexPath)\n        //   }\n        // } else {\n        //   console.log(\"path.node.source.value + '.js': \", path.node.source.value + '.js')\n        // }\n      }\n      j(path).replaceWith(path.node)\n    })\n    .toSource()\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623301881774
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/jonde/Code/codemods/jscodeshift-practice/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jonde/Code/codemods/jscodeshift-practice\",\"filename\":\"/home/jonde/Code/codemods/jscodeshift-practice/transform.cjs\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jonde/Code/codemods/jscodeshift-practice\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.3": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jonde/Code/codemods/jscodeshift-practice",
      "filename": "/home/jonde/Code/codemods/jscodeshift-practice/transform.cjs",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/jonde/Code/codemods/jscodeshift-practice",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jonde/Code/codemods/jscodeshift-practice/transform.cjs",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ],
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jonde/Code/codemods/jscodeshift-practice/transform.cjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
        "sourceFileName": "transform.cjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = (file, api) => {\n  const j = api.jscodeshift;\n  return j(file.source).find(j.ImportDeclaration).forEach(path => {\n    const conditions = [\"../\", \"./\", \"coi-constants/\", \"coi-server/\", \"coi-client/\", \"coi-shared/\", \"coi-test/\"]; // const conditions = [\".js.js\"];\n\n    const nullConditions = [\".css\", \".js\"];\n\n    if (conditions.some(e => path.node.source.value.includes(e)) && !nullConditions.some(e => path.node.source.value.includes(e))) {\n      path.node.source.value = path.node.source.value.replace(\".js.js\", \".js\");\n    }\n\n    j(path).replaceWith(path.node);\n  }).toSource();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybS5janMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZpbGUiLCJhcGkiLCJqIiwianNjb2Rlc2hpZnQiLCJzb3VyY2UiLCJmaW5kIiwiSW1wb3J0RGVjbGFyYXRpb24iLCJmb3JFYWNoIiwicGF0aCIsImNvbmRpdGlvbnMiLCJudWxsQ29uZGl0aW9ucyIsInNvbWUiLCJlIiwibm9kZSIsInZhbHVlIiwiaW5jbHVkZXMiLCJyZXBsYWNlIiwicmVwbGFjZVdpdGgiLCJ0b1NvdXJjZSJdLCJtYXBwaW5ncyI6Ijs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLElBQUQsRUFBT0MsR0FBUCxLQUFlO0FBQzVCLFFBQU1DLENBQUMsR0FBR0QsR0FBRyxDQUFDRSxXQUFkO0FBRUEsU0FBT0QsQ0FBQyxDQUFDRixJQUFJLENBQUNJLE1BQU4sQ0FBRCxDQUNKQyxJQURJLENBQ0NILENBQUMsQ0FBQ0ksaUJBREgsRUFFSkMsT0FGSSxDQUVLQyxJQUFELElBQVU7QUFDakIsVUFBTUMsVUFBVSxHQUFHLENBQUMsS0FBRCxFQUFRLElBQVIsRUFBYyxnQkFBZCxFQUFnQyxhQUFoQyxFQUErQyxhQUEvQyxFQUE4RCxhQUE5RCxFQUE2RSxXQUE3RSxDQUFuQixDQURpQixDQUVqQjs7QUFDQSxVQUFNQyxjQUFjLEdBQUcsQ0FBQyxNQUFELEVBQVMsS0FBVCxDQUF2Qjs7QUFDQSxRQUNFRCxVQUFVLENBQUNFLElBQVgsQ0FBaUJDLENBQUQsSUFBT0osSUFBSSxDQUFDSyxJQUFMLENBQVVULE1BQVYsQ0FBaUJVLEtBQWpCLENBQXVCQyxRQUF2QixDQUFnQ0gsQ0FBaEMsQ0FBdkIsS0FDQSxDQUFDRixjQUFjLENBQUNDLElBQWYsQ0FBcUJDLENBQUQsSUFBT0osSUFBSSxDQUFDSyxJQUFMLENBQVVULE1BQVYsQ0FBaUJVLEtBQWpCLENBQXVCQyxRQUF2QixDQUFnQ0gsQ0FBaEMsQ0FBM0IsQ0FGSCxFQUdFO0FBQ0FKLE1BQUFBLElBQUksQ0FBQ0ssSUFBTCxDQUFVVCxNQUFWLENBQWlCVSxLQUFqQixHQUF5Qk4sSUFBSSxDQUFDSyxJQUFMLENBQVVULE1BQVYsQ0FBaUJVLEtBQWpCLENBQXVCRSxPQUF2QixDQUErQixRQUEvQixFQUF5QyxLQUF6QyxDQUF6QjtBQUNEOztBQUNEZCxJQUFBQSxDQUFDLENBQUNNLElBQUQsQ0FBRCxDQUFRUyxXQUFSLENBQW9CVCxJQUFJLENBQUNLLElBQXpCO0FBQ0QsR0FiSSxFQWNKSyxRQWRJLEVBQVA7QUFlRCxDQWxCSCIsInNvdXJjZVJvb3QiOiIvaG9tZS9qb25kZS9Db2RlL2NvZGVtb2RzL2pzY29kZXNoaWZ0LXByYWN0aWNlLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5tb2R1bGUuZXhwb3J0cyA9IChmaWxlLCBhcGkpID0+IHtcbiAgICBjb25zdCBqID0gYXBpLmpzY29kZXNoaWZ0O1xuICBcbiAgICByZXR1cm4gaihmaWxlLnNvdXJjZSlcbiAgICAgIC5maW5kKGouSW1wb3J0RGVjbGFyYXRpb24pXG4gICAgICAuZm9yRWFjaCgocGF0aCkgPT4ge1xuICAgICAgICBjb25zdCBjb25kaXRpb25zID0gW1wiLi4vXCIsIFwiLi9cIiwgXCJjb2ktY29uc3RhbnRzL1wiLCBcImNvaS1zZXJ2ZXIvXCIsIFwiY29pLWNsaWVudC9cIiwgXCJjb2ktc2hhcmVkL1wiLCBcImNvaS10ZXN0L1wiXTtcbiAgICAgICAgLy8gY29uc3QgY29uZGl0aW9ucyA9IFtcIi5qcy5qc1wiXTtcbiAgICAgICAgY29uc3QgbnVsbENvbmRpdGlvbnMgPSBbXCIuY3NzXCIsIFwiLmpzXCJdO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgY29uZGl0aW9ucy5zb21lKChlKSA9PiBwYXRoLm5vZGUuc291cmNlLnZhbHVlLmluY2x1ZGVzKGUpKSAmJlxuICAgICAgICAgICFudWxsQ29uZGl0aW9ucy5zb21lKChlKSA9PiBwYXRoLm5vZGUuc291cmNlLnZhbHVlLmluY2x1ZGVzKGUpKVxuICAgICAgICApIHtcbiAgICAgICAgICBwYXRoLm5vZGUuc291cmNlLnZhbHVlID0gcGF0aC5ub2RlLnNvdXJjZS52YWx1ZS5yZXBsYWNlKFwiLmpzLmpzXCIsIFwiLmpzXCIpO1xuICAgICAgICB9XG4gICAgICAgIGoocGF0aCkucmVwbGFjZVdpdGgocGF0aC5ub2RlKTtcbiAgICAgIH0pXG4gICAgICAudG9Tb3VyY2UoKTtcbiAgfVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "transform.cjs"
      ],
      "names": [
        "module",
        "exports",
        "file",
        "api",
        "j",
        "jscodeshift",
        "source",
        "find",
        "ImportDeclaration",
        "forEach",
        "path",
        "conditions",
        "nullConditions",
        "some",
        "e",
        "node",
        "value",
        "includes",
        "replace",
        "replaceWith",
        "toSource"
      ],
      "mappings": ";;AAEAA,MAAM,CAACC,OAAP,GAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,SAAOD,CAAC,CAACF,IAAI,CAACI,MAAN,CAAD,CACJC,IADI,CACCH,CAAC,CAACI,iBADH,EAEJC,OAFI,CAEKC,IAAD,IAAU;AACjB,UAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,gBAAd,EAAgC,aAAhC,EAA+C,aAA/C,EAA8D,aAA9D,EAA6E,WAA7E,CAAnB,CADiB,CAEjB;;AACA,UAAMC,cAAc,GAAG,CAAC,MAAD,EAAS,KAAT,CAAvB;;AACA,QACED,UAAU,CAACE,IAAX,CAAiBC,CAAD,IAAOJ,IAAI,CAACK,IAAL,CAAUT,MAAV,CAAiBU,KAAjB,CAAuBC,QAAvB,CAAgCH,CAAhC,CAAvB,KACA,CAACF,cAAc,CAACC,IAAf,CAAqBC,CAAD,IAAOJ,IAAI,CAACK,IAAL,CAAUT,MAAV,CAAiBU,KAAjB,CAAuBC,QAAvB,CAAgCH,CAAhC,CAA3B,CAFH,EAGE;AACAJ,MAAAA,IAAI,CAACK,IAAL,CAAUT,MAAV,CAAiBU,KAAjB,GAAyBN,IAAI,CAACK,IAAL,CAAUT,MAAV,CAAiBU,KAAjB,CAAuBE,OAAvB,CAA+B,QAA/B,EAAyC,KAAzC,CAAzB;AACD;;AACDd,IAAAA,CAAC,CAACM,IAAD,CAAD,CAAQS,WAAR,CAAoBT,IAAI,CAACK,IAAzB;AACD,GAbI,EAcJK,QAdI,EAAP;AAeD,CAlBH",
      "sourceRoot": "/home/jonde/Code/codemods/jscodeshift-practice/",
      "sourcesContent": [
        "\n\nmodule.exports = (file, api) => {\n    const j = api.jscodeshift;\n  \n    return j(file.source)\n      .find(j.ImportDeclaration)\n      .forEach((path) => {\n        const conditions = [\"../\", \"./\", \"coi-constants/\", \"coi-server/\", \"coi-client/\", \"coi-shared/\", \"coi-test/\"];\n        // const conditions = [\".js.js\"];\n        const nullConditions = [\".css\", \".js\"];\n        if (\n          conditions.some((e) => path.node.source.value.includes(e)) &&\n          !nullConditions.some((e) => path.node.source.value.includes(e))\n        ) {\n          path.node.source.value = path.node.source.value.replace(\".js.js\", \".js\");\n        }\n        j(path).replaceWith(path.node);\n      })\n      .toSource();\n  }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623262608226
  }
}